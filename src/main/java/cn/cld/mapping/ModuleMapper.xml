<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cld.dao.ModuleMapper" >
  <resultMap id="BaseResultMap" type="cn.cld.pojo.Module" >
    <id column="moduleNo" property="moduleNo" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="moduleName" property="moduleName" jdbcType="VARCHAR" />
    <result column="pardentNo" property="pardentNo" jdbcType="VARCHAR" />
    <result column="pardentName" property="pardentName" jdbcType="VARCHAR" />
    <result column="isFile" property="isFile" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="iconCls" property="iconCls" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    moduleNo, level, moduleName, pardentNo, pardentName, isFile, url, iconCls, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.cld.pojo.ModuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from module
    where moduleNo = #{moduleNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from module
    where moduleNo = #{moduleNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cld.pojo.ModuleExample" >
    delete from module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.cld.pojo.Module" >
    insert into module (moduleNo, level, moduleName, 
      pardentNo, pardentName, isFile, 
      url, iconCls, state
      )
    values (#{moduleNo,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR}, 
      #{pardentNo,jdbcType=VARCHAR}, #{pardentName,jdbcType=VARCHAR}, #{isFile,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cld.pojo.Module" >
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleNo != null" >
        moduleNo,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="moduleName != null" >
        moduleName,
      </if>
      <if test="pardentNo != null" >
        pardentNo,
      </if>
      <if test="pardentName != null" >
        pardentName,
      </if>
      <if test="isFile != null" >
        isFile,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="iconCls != null" >
        iconCls,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleNo != null" >
        #{moduleNo,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="pardentNo != null" >
        #{pardentNo,jdbcType=VARCHAR},
      </if>
      <if test="pardentName != null" >
        #{pardentName,jdbcType=VARCHAR},
      </if>
      <if test="isFile != null" >
        #{isFile,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cld.pojo.ModuleExample" resultType="java.lang.Integer" >
    select count(*) from module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update module
    <set >
      <if test="record.moduleNo != null" >
        moduleNo = #{record.moduleNo,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null" >
        moduleName = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.pardentNo != null" >
        pardentNo = #{record.pardentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.pardentName != null" >
        pardentName = #{record.pardentName,jdbcType=VARCHAR},
      </if>
      <if test="record.isFile != null" >
        isFile = #{record.isFile,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.iconCls != null" >
        iconCls = #{record.iconCls,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update module
    set moduleNo = #{record.moduleNo,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      moduleName = #{record.moduleName,jdbcType=VARCHAR},
      pardentNo = #{record.pardentNo,jdbcType=VARCHAR},
      pardentName = #{record.pardentName,jdbcType=VARCHAR},
      isFile = #{record.isFile,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      iconCls = #{record.iconCls,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cld.pojo.Module" >
    update module
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null" >
        moduleName = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="pardentNo != null" >
        pardentNo = #{pardentNo,jdbcType=VARCHAR},
      </if>
      <if test="pardentName != null" >
        pardentName = #{pardentName,jdbcType=VARCHAR},
      </if>
      <if test="isFile != null" >
        isFile = #{isFile,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        iconCls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where moduleNo = #{moduleNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cld.pojo.Module" >
    update module
    set level = #{level,jdbcType=INTEGER},
      moduleName = #{moduleName,jdbcType=VARCHAR},
      pardentNo = #{pardentNo,jdbcType=VARCHAR},
      pardentName = #{pardentName,jdbcType=VARCHAR},
      isFile = #{isFile,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      iconCls = #{iconCls,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where moduleNo = #{moduleNo,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="cn.cld.pojo.ModuleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>